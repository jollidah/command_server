name: CI Test
on: 
  push:
    branches-ignore:
        - "deploy/*"
        - "main"

env:
  DATABASE_URL: postgres://test:test123@localhost:5432/aut_cloud
  DB_USER: test
  DB_PASSWORD: test123
  DB_NAME: aut_cloud

jobs:
  ci-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain: [stable]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Cache cargo registry and build
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: database driver setup
      run: |
        cargo install sqlx-cli --no-default-features --features native-tls,postgres,openssl-vendored

    - name: formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: create .env file
      run: |
        cat > .env << EOF
        DATABASE_URL=${{ env.DATABASE_URL }}
        DB_USER=${{ env.DB_USER }}
        DB_PASSWORD=${{ env.DB_PASSWORD }}
        DB_NAME=${{ env.DB_NAME }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}
        GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}
        EOF

    - name: load up docker 
      run: |
        docker compose up -d  
        
    - name: apply migration
      run: |
        sleep 2
        sqlx migrate run --database-url $DATABASE_URL
    - name: sqlx-data check
      run: |
        cargo sqlx prepare --check

    - name: linting
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
    

    - name: Test 
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --locked -- --test-threads 1 --nocapture

    - name: clean_up
      if: always()
      run: |
        docker compose down -v
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./
    
  